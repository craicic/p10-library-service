<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://proj.gg.com/service/books"
           targetNamespace="http://proj.gg.com/service/books" elementFormDefault="qualified">

    <!--================ BOOK RELATED METHODS ================-->
    <!--==== CRUD Book methods ====-->
    <!-- persist a book -->
    <xs:element name="createBookRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="bookMin" type="tns:bookMin"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="createBookResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="book" type="tns:book"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- update a book -->
    <xs:element name="saveBookRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="book" type="tns:book"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="saveBookResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="book" type="tns:book"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- get a specific book by id -->
    <xs:element name="getBookRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getBookResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="bookFull" type="tns:bookFull" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- list all books -->
    <xs:element name="listAllBooksRequest">
        <xs:complexType>
            <xs:sequence>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="listAllBooksResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="books" type="tns:book" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- delete a book -->
    <xs:element name="deleteBookRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="book" type="tns:book"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="deleteBookResponse">
        <xs:complexType>
        </xs:complexType>
    </xs:element>

    <!--==== CRUD Topic methods ====-->
    <!-- persist a topic -->
    <xs:element name="createTopicRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="topicName" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="createTopicResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="topic" type="tns:topic"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- update a topic -->
    <xs:element name="saveTopicRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="topic" type="tns:topic"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="saveTopicResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="topic" type="tns:topic"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- get topic by id -->
    <xs:element name="getTopicRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getTopicResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="topic" type="tns:topic" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- list all topics-->
    <xs:element name="listAllTopicsRequest">
        <xs:complexType>
            <xs:sequence>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="listAllTopicsResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="topics" type="tns:topic" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- delete a topic -->
    <xs:element name="deleteTopicRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="topic" type="tns:topic"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="deleteTopicResponse">
        <xs:complexType>
        </xs:complexType>
    </xs:element>

    <!-- find all topic by a given bookId -->
    <!-- list all topics-->
    <xs:element name="getTopicListByBookIdRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="bookId" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getTopicListByBookIdResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="topics" type="tns:topic" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!--==== CRUD Library methods ====-->
    <!-- persist a library -->
    <xs:element name="createLibraryRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="libraryMin" type="tns:libraryMin"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="createLibraryResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="library" type="tns:library"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- update a library -->
    <xs:element name="saveLibraryRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="library" type="tns:library"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="saveLibraryResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="library" type="tns:library"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- get library by id -->
    <xs:element name="getLibraryRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getLibraryResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="library" type="tns:library" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- list all libraries -->
    <xs:element name="listAllLibrariesRequest">
        <xs:complexType>
            <xs:sequence>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="listAllLibrariesResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="libraries" type="tns:library" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- delete a library -->
    <xs:element name="deleteLibraryRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="library" type="tns:library"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="deleteLibraryResponse">
        <xs:complexType>
        </xs:complexType>
    </xs:element>
    <!--==== CRUD Language methods ====-->
    <!-- persist a language -->
    <xs:element name="createLanguageRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="languageName" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="createLanguageResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="language" type="tns:language"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- update a language -->
    <xs:element name="saveLanguageRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="language" type="tns:language"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="saveLanguageResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="language" type="tns:language"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- get language by id -->
    <xs:element name="getLanguageRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="id" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getLanguageResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="language" type="tns:language" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- list all languages-->
    <xs:element name="listAllLanguagesRequest">
        <xs:complexType>
            <xs:sequence>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="listAllLanguagesResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="languages" type="tns:language" maxOccurs="unbounded"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <!-- delete a language -->
    <xs:element name="deleteLanguageRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="tokenUUID" type="xs:string"/>
                <xs:element name="language" type="tns:language"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="deleteLanguageResponse">
        <xs:complexType>
        </xs:complexType>
    </xs:element>
    <!--==== End of CRUD ====-->

    <!-- this is filterBooks method -->
    <!-- you request page, size, keyword, it return a book list plus a lot of infos to performs a filtered filterBooks -->
    <xs:element name="searchBooksRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="page" type="xs:int"/>
                <xs:element name="size" type="xs:int"/>
                <xs:element name="keyWord" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="searchBooksResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="totalPages" type="xs:int"/>
                <xs:element maxOccurs="unbounded" name="books" type="tns:book"/>
                <!-- this filterBooks returns those 3 list in order to fill combo-lists for the filtered filterBooks -->
                <xs:element maxOccurs="unbounded" name="libraries" type="tns:library"/>
                <xs:element maxOccurs="unbounded" name="topics" type="tns:topic"/>
                <xs:element maxOccurs="unbounded" name="languages" type="tns:language"/>
                <!-- then we pass back the keyWord -->
                <xs:element name="keyWord" type="xs:string"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- Once a filterBooks has been performed, web service client can ask for a filterBooks by passing various params -->
    <xs:element name="filterBooksRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="page" type="xs:int"/>
                <xs:element name="size" type="xs:int"/>
                <xs:element name="keyWord" type="xs:string" minOccurs="0"/>
                <!-- params coming from combobox-->
                <xs:element name="libraryId" type="xs:int" minOccurs="0"/>
                <xs:element name="topicId" type="xs:int" minOccurs="0"/>
                <xs:element name="languageId" type="xs:int" minOccurs="0"/>
                <!-- is the book available -->
                <xs:element name="available" type="xs:boolean"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="filterBooksResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="totalPages" type="xs:int"/>
                <xs:element maxOccurs="unbounded" name="books" type="tns:book"/>
                <!-- this filterBooks could return the library, topic and language for the webapp to display filterBooks terms -->
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!-- A method to get Book data and booking info -->
    <xs:element name="getBookAndBookingInfoRequest">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="bookId" type="xs:int"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="getBookAndBookingInfoResponse">
        <xs:complexType>
            <xs:sequence>
                <xs:element name="bookAndBookingInfo" type="tns:bookAndBookingInfo" minOccurs="0"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <!--================ OBJECTS ================-->
    <!-- a single book -->
    <xs:complexType name="book">
        <xs:sequence>
            <xs:element name="id" type="xs:int"/>
            <xs:element name="title" type="xs:string"/>
            <xs:element name="author" type="xs:string"/>
            <xs:element name="isbn" type="xs:string" minOccurs="0"/>
            <xs:element maxOccurs="unbounded" name="topicIds" type="xs:int"/>
            <xs:element name="languageId" type="xs:int"/>
            <xs:element name="quantity" type="xs:int"/>
            <xs:element name="publicationDate" type="xs:date"/>
            <xs:element name="libraryId" type="xs:int"/>
            <xs:element name="summary" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- a full book -->
    <xs:complexType name="bookFull">
        <xs:sequence>
            <xs:element name="id" type="xs:int" minOccurs="0"/>
            <xs:element name="title" type="xs:string"/>
            <xs:element name="author" type="xs:string"/>
            <xs:element name="isbn" type="xs:string" minOccurs="0"/>
            <xs:element maxOccurs="unbounded" name="topics" type="tns:topic"/>
            <xs:element name="language" type="tns:language"/>
            <xs:element name="quantity" type="xs:int"/>
            <xs:element name="publicationDate" type="xs:date"/>
            <xs:element name="library" type="tns:library"/>
            <xs:element name="summary" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- a full book -->
    <xs:complexType name="bookAndBookingInfo">
        <xs:sequence>
            <xs:element name="id" type="xs:int" minOccurs="0"/>
            <xs:element name="title" type="xs:string"/>
            <xs:element name="author" type="xs:string"/>
            <xs:element name="isbn" type="xs:string" minOccurs="0"/>
            <xs:element maxOccurs="unbounded" name="topics" type="tns:topic"/>
            <xs:element name="language" type="tns:language"/>
            <xs:element name="quantity" type="xs:int"/>
            <xs:element name="publicationDate" type="xs:date"/>
            <xs:element name="library" type="tns:library"/>
            <xs:element name="summary" type="xs:string" minOccurs="0"/>
            <xs:element name="bookingQueue" type="xs:int"/>
            <xs:element name="nextReturnDate" type="xs:date" minOccurs="0"/>
            <xs:element name="maxNotificationTime" type="xs:time" minOccurs="0"/>
            <xs:element name="queueToLong" type="xs:boolean"/>
        </xs:sequence>
    </xs:complexType>


    <!-- a minimal book -->
    <xs:complexType name="bookMin">
        <xs:sequence>
            <xs:element name="title" type="xs:string"/>
            <xs:element name="author" type="xs:string"/>
            <xs:element name="isbn" type="xs:string" minOccurs="0"/>
            <xs:element maxOccurs="unbounded" name="topicIds" type="xs:int"/>
            <xs:element name="languageId" type="xs:int"/>
            <xs:element name="quantity" type="xs:int"/>
            <xs:element name="publicationDate" type="xs:date"/>
            <xs:element name="libraryId" type="xs:int"/>
            <xs:element name="summary" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <!-- a library -->
    <xs:complexType name="library">
        <xs:sequence>
            <xs:element name="id" type="xs:int"/>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="city" type="xs:string"/>
            <xs:element name="postalCode" type="xs:int"/>
            <xs:element name="address" type="xs:string"/>
            <xs:element name="phoneNumber" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- a library without id -->
    <xs:complexType name="libraryMin">
        <xs:sequence>
            <xs:element name="name" type="xs:string"/>
            <xs:element name="city" type="xs:string"/>
            <xs:element name="postalCode" type="xs:int"/>
            <xs:element name="address" type="xs:string"/>
            <xs:element name="phoneNumber" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- a topic -->
    <xs:complexType name="topic">
        <xs:sequence>
            <xs:element name="id" type="xs:int"/>
            <xs:element name="name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- a language -->
    <xs:complexType name="language">
        <xs:sequence>
            <xs:element name="id" type="xs:int"/>
            <xs:element name="name" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!--================ SERVICE STATUS ================-->
    <xs:complexType name="serviceStatus">
        <xs:sequence>
            <xs:element name="statusCode" type="xs:string"/>
            <xs:element name="message" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

</xs:schema>
